<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    
    <context:property-placeholder location="classpath:mmall.properties"/>

    <!--文档的介绍：Exposes the {@link SessionRepositoryFilter} as a bean named "springSessionRepositoryFilter".
            In order to use this a single {@link RedisConnectionFactory} must be exposed as a Bean.
            使用spring session结合redis,这个类必须引入，下面设置的属性是存储在redis的数据在没操作后多上时间后失效，默认也是30分钟，其它属性有待研究-->
    <bean id="redisHttpSessionConfiguration"
          class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="1800"/>
    </bean>
    
    <!--设置spring session 用于写入并标识的cookie的属性，Spring session如何调用它：
        1.RedisHttpSessionConfiguration extends springHttpSessionConfiguration；
        2.springHttpSessionConfiguration 调用 cookieHttpSessionStrategy；
        3.cookieHttpSessionStrategy 调用 DefaultCookieSerializer；
        -->
    <bean id="defaultCookieSerializer" class="org.springframework.session.web.http.DefaultCookieSerializer">
        <!--设置cookie的名字，默认就是SESSION，通常不用修改-->
        <property name="cookieName" value="SESSION"/>
        <property name="domainName" value=".mymall.com"/>
        <property name="cookiePath" value="/"/>
        <!--设置cookie生存时间 1年-->
        <property name="cookieMaxAge" value="31536000"/>
    </bean>
    
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.max.total}"/>
        <property name="maxIdle" value="${redis.max.idle}"/>
        <!--<property name="minIdle" value="${redis.min.idle}"/>-->
        <property name="testOnBorrow" value="${redis.test.borrow}"/>
        <property name="testOnReturn" value="${redis.test.return}"/>
    </bean>
    
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis1.ip}"/>
        <property name="port" value="${redis1.port}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>


</beans>